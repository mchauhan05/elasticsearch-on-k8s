apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: eck-default
spec:
  version: 7.12.0
  secureSettings:
    - secretName: <SECRET-NAME>
  http:
    tls:
      selfSignedCertificate:
        disabled: true
    service:
      metadata:
        annotations:
          # GKE
          networking.gke.io/load-balancer-type: Internal
          networking.gke.io/internal-load-balancer-allow-global-access: "true"
#          #AKS
#          service.beta.kubernetes.io/azure-load-balancer-internal: "true"
#          # AWS
#          service.beta.kubernetes.io/aws-load-balancer-type: nlb
#          service.beta.kubernetes.io/aws-load-balancer-internal: "true"
      spec:
        type: LoadBalancer
  nodeSets:
    - name: master
      count: 3
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: eck-storage-ssd
      config:
        node.roles: ["master"]
      podTemplate:
        spec:
          initContainers:
            - name: install-plugins
              command:
                - sh
                - -c
                - |
                  bin/elasticsearch-plugin install --batch repository-eck
            - name: sysctl
              securityContext:
                privileged: true
              command: [ 'sh', '-c', 'sysctl -w vm.max_map_count=262144' ]
          containers:
            - name: elasticsearch
              readinessProbe:
                exec:
                  command:
                    - bash
                    - -c
                    - /mnt/elastic-internal/scripts/readiness-probe-script.sh
                failureThreshold: 3
                initialDelaySeconds: 20
                periodSeconds: 12
                successThreshold: 1
                timeoutSeconds: 12
              env:
                - name: ES_JAVA_OPTS
                  value: "-XX:MinRAMPercentage=50.0 -XX:MaxRAMPercentage=85.0"
                - name: READINESS_PROBE_TIMEOUT
                  value: "10"
              resources:
                requests:
                  memory: 1.5Gi
                limits:
                  memory: 1.5Gi

    - name: data
      count: 4
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
            storageClassName: eck-storage-ssd # Create a storage class
      config:
        node.roles: ["data", "ingest"]
        thread_pool.search.queue_size: 2500
      podTemplate:
        spec:
          initContainers:
            - name: install-plugins
              command:
                - sh
                - -c
                - |
                  bin/elasticsearch-plugin install --batch repository-eck
            - name: sysctl
              securityContext:
                privileged: true
              command: [ 'sh', '-c', 'sysctl -w vm.max_map_count=262144' ]
          containers:
            - name: elasticsearch
              readinessProbe:
                exec:
                  command:
                    - bash
                    - -c
                    - /mnt/elastic-internal/scripts/readiness-probe-script.sh
                failureThreshold: 3
                initialDelaySeconds: 20
                periodSeconds: 12
                successThreshold: 1
                timeoutSeconds: 12
              env:
                - name: ES_JAVA_OPTS
                  value: -Xmx2g -Xms2g
                - name: READINESS_PROBE_TIMEOUT
                  value: "10"
              resources:
                requests:
                  memory: 4Gi
                limits:
                  memory: 4Gi

---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: eck-default-kibana
spec:
  version: 7.12.0
  http:
    service:
      metadata:
        annotations:
          # GKE
          networking.gke.io/load-balancer-type: Internal
          networking.gke.io/internal-load-balancer-allow-global-access: "true"
#          #AKS
#          service.beta.kubernetes.io/azure-load-balancer-internal: "true"
#          # AWS
#          service.beta.kubernetes.io/aws-load-balancer-type: nlb
#          service.beta.kubernetes.io/aws-load-balancer-internal: "true"
      spec:
        type: LoadBalancer
  count: 1
  elasticsearchRef:
    name: eck-default
  podTemplate:
    spec:
      containers:
        - name: kibana
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            exec:
              command:
                - /bin/bash
                - -c
                - curl -o /dev/null -w "%{http_code}" https://127.0.0.1:5601/login -k -s
          resources:
            requests:
              memory: 1Gi
            limits:
              memory: 1Gi